// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"douyin/rpc/core/internal/logic"
	"douyin/rpc/core/internal/svc"
	"douyin/rpc/core/pb"
)

type CoreServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedCoreServer
}

func NewCoreServer(svcCtx *svc.ServiceContext) *CoreServer {
	return &CoreServer{
		svcCtx: svcCtx,
	}
}

func (s *CoreServer) GetUserInfo(ctx context.Context, in *pb.DouyinUserRequest) (*pb.DouyinUserResponse, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *CoreServer) DouyinUserRegister(ctx context.Context, in *pb.DouyinUserRegisterRequest) (*pb.DouyinUserRegisterResponse, error) {
	l := logic.NewDouyinUserRegisterLogic(ctx, s.svcCtx)
	return l.DouyinUserRegister(in)
}

func (s *CoreServer) DouyinUserLogin(ctx context.Context, in *pb.DouyinUserLoginRequest) (*pb.DouyinUserLoginResponse, error) {
	l := logic.NewDouyinUserLoginLogic(ctx, s.svcCtx)
	return l.DouyinUserLogin(in)
}

func (s *CoreServer) DouyinFeed(ctx context.Context, in *pb.DouyinFeedRequest) (*pb.DouyinFeedResponse, error) {
	l := logic.NewDouyinFeedLogic(ctx, s.svcCtx)
	return l.DouyinFeed(in)
}

func (s *CoreServer) DouyinPublishAction(ctx context.Context, in *pb.DouyinPublishActionRequest) (*pb.DouyinPublishActionResponse, error) {
	l := logic.NewDouyinPublishActionLogic(ctx, s.svcCtx)
	return l.DouyinPublishAction(in)
}

func (s *CoreServer) DouyinPublishList(ctx context.Context, in *pb.DouyinPublishListRequest) (*pb.DouyinPublishListResponse, error) {
	l := logic.NewDouyinPublishListLogic(ctx, s.svcCtx)
	return l.DouyinPublishList(in)
}
